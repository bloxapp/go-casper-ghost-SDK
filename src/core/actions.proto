syntax = "proto3";
package state;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option go_package = ".;core";

// A request struct for creating new pool credentials
// will trigger random selection of 128 executors to DKG new pool credentials and wait for deposit
//
// How it works?
// - A user sends 32 eth and create pool request
// - The first BP that sees it, will post a CreatePoolRequest with Status 0 and will nominate the next BP as the leader for the DKG
//   (the 128 DKG participants are deterministically selected as well)
// - If during the next Epoch the DKG is successful, the BP (which is also the DKG leader) posts a CreatePoolRequest with the same ID,
//   Status 1 and the created pub key
// - If the DKG is un-successful, the BP will post a CreatePoolRequest with the same ID, Status 3 and will nominate the next BP as leader
//
// A successful DKG will reward the leader and DKG participants
// A non-successful DKG will penalized the DKG participants
message CreateNewPoolRequest {
  uint64 Id = 1; // primary key
  uint32 Status = 2; // 0 - started, 1 completed, 2 - Unsuccessful
  uint64 StartEpoch = 3; // epoch in which the request was included
  uint64 EndEpoch = 4; // max epoch for the request to be completed or failed
  uint64 LeaderBlockProducer = 5; // should be the BP proposer of next block after which this request was included in.
  bytes CreatePubKey = 6; // populated after DKG is successful
  bytes Participation = 7 [(gogoproto.moretags) = "ssz-max:\"3\"", (gogoproto.casttype) = "github.com/prysmaticlabs/go-bitfield.Bitlist"]; // 24 bit of the executors (by order) which executed this duty
}